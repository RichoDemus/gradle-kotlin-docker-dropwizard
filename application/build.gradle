import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'kotlin'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'ca.cutterslade.analyze'
apply plugin: 'com.bmuschko.docker-remote-api'

repositories {
    jcenter()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-runtime:1.1.0'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.1.0'

    compile 'org.jetbrains:annotations:13.0'

    compile 'io.dropwizard:dropwizard-core:1.0.6'
    compile 'io.dropwizard:dropwizard-assets:1.0.6'
    compile 'io.dropwizard.metrics:metrics-healthchecks:3.1.2'

    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'

    compile 'ru.vyarus:dropwizard-guicey:4.0.1'

    compile 'com.google.inject:guice:4.1.0'
    compile 'com.richodemus.scanner:guice-classpath-scanner:1.0.0'


    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.2'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.14.0'
        classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.1.0'
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.5'
    }
}

task copyDependencies(type: Copy) {
    from configurations.compile
    into 'build/dependencies'
}

task buildImage(type: DockerBuildImage) {
    dockerFile = new File('./Dockerfile')
    inputDir = new File('.')
    tag = 'richodemus/gradle-kotlin-docker-dropwizard:latest'
}
